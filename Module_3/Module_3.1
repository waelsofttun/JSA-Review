Operators can be categorized in several ways binary (+,-) or unary (typeof) , ternary 
or prefix operators (occurring before the operand), postfix operators (after the operand) and infix operators (between operands).
assignment; arithmetic; logical; or conditional operators.
The same symbol can be interpreted as a different operator depending on the context (exemple + contacte on string or calculate on numbers)
If several assignment operators appear in a sequence, the order from right to left applies. So the sequence:
let year = 2050;
let newYear = year = 2051;

Arithmetic operators : 
The basic binary arithmetic operators are the addition +, subtraction -, multiplication *, division /, division remainder % and power **. Their operation is analogous to what we know from mathematics, and the easiest way to trace them is to use an example:
const x = 5;
const y = 2;

console.log("addition: ", x + y); // -> 7
console.log("subtraction: ", x - y); // -> 3
console.log("multiplication: ", x * y); // -> 10
console.log("division: ", x / y); // -> 2.5
console.log("division remainder :", x % y); // -> 1
console.log("exponent: ", x ** y); // -> 25

Unary arithmetic operators : 
+ , - Both operators convert operands to the Number type, while the minus operator additionally negates it.

let str = "123";
let n1 = +str;
let n2 = -str;
let n3 = -n2;
let n4 = +"abcd";

console.log(`${str} : ${typeof str}`); // -> 123 : string
console.log(`${n1} : ${typeof n1}`); // -> 123 : number
console.log(`${n2} : ${typeof n2}`); // -> -123 : number
console.log(`${n3} : ${typeof n3}`); // -> 123 : number
console.log(`${n4} : ${typeof n4}`); // -> NaN : number

Unary increment and decrement operators :  ++ , -- 
These operators in the postfix version (i.e. the operator is on the right side of the operand) performs the operation by changing the value of the variable, but returns the value before the change. The prefix version of the operator (i.e. the operator is placed before the operand) performs the operation and returns the new value.

Compound Assignment Operators : 
let x = 10;

x += 2;
console.log(x); // -> 12
x -= 4;
console.log(x); // -> 8
x *= 3;
console.log(x); // -> 24
x /= 6;
console.log(x); // -> 4
x **= 3;
console.log(x); // -> 64
x %= 10;
console.log(x); // -> 4

Logical operators
The highest priority is negation !, then conjunction &&, and finally the alternative ||
a conjunction, i.e. logical AND (&& symbol)
an alternative, i.e. logical OR (symbol ||)
a negation, i.e. logical NOT (symbol !)


